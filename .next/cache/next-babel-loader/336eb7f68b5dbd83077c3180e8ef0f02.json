{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"F:\\\\In Progress\\\\NextJS\\\\Projects\\\\DocumentsProject\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../component/layout.component\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Batman TV shows\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["F:/In Progress/NextJS/Projects/DocumentsProject/pages/index.js"],"names":["Layout","Link","fetch","Index","props","getInitialProps","res","json","data","console","log","length","shows","map","entry","show"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,+BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADiB;AAAA,CAAnB;;AAMAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJH,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBI,UAAAA,GADgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAKtBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AALsB,2CAOf;AACLC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAYA,eAAeZ,KAAf","sourcesContent":["import Layout from \"../component/layout.component\";\r\nimport Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Index = props => (\r\n  <Layout>\r\n    <h1>Batman TV shows</h1>\r\n  </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async () => {\r\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}